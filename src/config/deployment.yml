#########################################################
# Common Environment variables ConfigMap
#########################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
data:
  NAMESPACE: "NOVALAPI"
  LOGLEVEL: info
  SERVICEDIR: services
  TRANSPORTER: nats://nats:4222
  CACHER: Memory

  MONGO_URI: <MONGO_URI>

---
#########################################################
# Service for Moleculer API Gateway service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    name: api
spec:
  selector:
    matchLabels:
      name: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
        name: api
    spec:
      containers:
        - name: api
          image: <IMAGE>
          imagePullPolicy: Always
          ports:
            - name: api
              containerPort: 3000
          env:
            - name: LOGGER
              value: "true"
            - name: LOGLEVEL
              value: info
            - name: PORT
              value: "3000"
            - name: SERVICES
              value: src/services/api.service.js
            - name: TRANSPORTER
              value: nats://nats:4222
            - name: REDIS_URI
              value: redis://redis:6379
          livenessProbe:
            httpGet:
              path: /live
              port: 3001
          readinessProbe:
            httpGet:
              path: /ready
              port: 3001
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    name: api-service
spec:
  type: NodePort
  ports:
    - port: 80
      name: http
      targetPort: 3000
    - port: 443
      name: https
      targetPort: 3000
  selector:
    app: api

---
#################################
# K8S Ingress for API Gateway   #
#################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: micro-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-service
                port:
                  number: 3000
---
#########################################################
# NATS transporter service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
    - port: 4222
      nodePort: 32222
  type: NodePort

---
#########################################################
# NATS transporter
#########################################################
apiVersion: v1
kind: Pod
metadata:
  name: nats
  labels:
    app: nats
spec:
  containers:
    - name: nats
      image: nats
---
#########################################################
# Customers service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers
spec:
  selector:
    matchLabels:
      app: customers
  replicas: 2
  template:
    metadata:
      labels:
        app: customers
    spec:
      containers:
        - name: customers
          image: <IMAGE>
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: customers

---
#########################################################
# Booking service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookings
spec:
  selector:
    matchLabels:
      app: bookings
  replicas: 2
  template:
    metadata:
      labels:
        app: bookings
    spec:
      containers:
        - name: bookings
          image: <IMAGE>
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: bookings

---
#########################################################
# Payment service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments
spec:
  selector:
    matchLabels:
      app: payments
  replicas: 2
  template:
    metadata:
      labels:
        app: payments
    spec:
      containers:
        - name: payments
          image: <IMAGE>
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: payments

---
